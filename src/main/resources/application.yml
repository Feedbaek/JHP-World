spring:
  application:
    name: JHP-World

  profiles:
    include: oauth2

  datasource:
    hikari:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://localhost:3306/jhp?serverTimezone=Asia/Seoul
      username: root
      password: 1234
      maximum-pool-size: 10
      minimum-idle: 10

  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    baseline-version: 0
    fail-on-missing-locations: true

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate # flyway가 실행되고 ddl-auto가 실행됨. validate로 설정하여 검증 모드로 설정.
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
    defer-datasource-initialization: false  # hibernate와 flyway 초기화 실행 순서 지정. false로 설정하면 flyway가 먼저 실행됨.

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 20MB

  session:
    redis:
      namespace: jhp
      repository-type: indexed

  cache:
    type: redis

  data:
    redis:
      host: localhost
      port: 6379
      password: 1234
      repositories:
        enabled: false

  thymeleaf:
    cache: false
    check-template-location: true
    prefix: classpath:/templates/
    suffix: .html

  security:
    user:
      name: root
      password: 1234


  jackson:
    time-zone: Asia/Seoul

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    pub-queue: execute-queue
    sub-queue: result-queue
    pub-exchange: execute-exchange
    sub-exchange: result-exchange
    pub-routing-key: execute
    sub-routing-key: result


server:
  port: 8080

  error:
    include-exception: false
    include-message: always
    include-stacktrace: never
    whitelabel.enabled: true

  servlet:
    session:
      timeout: 30m
      cookie:
        name: JSESSIONID
    context-path: /jhp-world

  tomcat:
    remoteip:
      remote-ip-header: x-forwarded-for
      protocol-header: x-forwarded-proto

logging:
  level:
    root: info

proobject:
  minskim2:
    redis:
      type: standalone
      nodes:
        - localhost:6379

url:
  login: /login
  login-success: /home
  logout: /logout


test:
  enable: true

---
# Test 프로필에는 아래 설정을 오버라이딩하여 사용한다.
spring:
  config:
    activate:
      on-profile: test

  datasource:
    hikari:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://localhost:3306/test?serverTimezone=Asia/Seoul
      username: root
      password: 1234
      maximum-pool-size: 10
      minimum-idle: 10

  flyway:
    enabled: false

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: create # flyway가 실행되고 ddl-auto가 실행됨. validate로 설정하여 검증 모드로 설정.
    show-sql: true
    properties:
      hibernate:
        format_sql: true


---
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    hikari:
      driver-class-name: ${DB_DRIVER_CLASS_NAME}
      jdbc-url: ${DB_JDBC_URL}
      username: ${DB_USERNAME}
      password: ${DB_PASSWORD}
      maximum-pool-size: 10
      minimum-idle: 10
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      repositories:
        enabled: false

  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    pub-queue: execute-queue
    sub-queue: result-queue
    pub-exchange: execute-exchange
    sub-exchange: result-exchange
    pub-routing-key: execute
    sub-routing-key: result

proobject:
  minskim2:
    redis:
      type: standalone
      nodes:
        - ${REDIS_HOST}:${REDIS_PORT}